// Generated by ReScript, PLEASE EDIT WITH CARE

import { MouseEvent, ReactNode, useCallback } from 'react';
import { useNavigate } from '../router';

const getInternalPath = (href: string) => {
  if (href.startsWith('/')) {
    const result = {
      isInternal: true,
      path: href,
    } as const;

    return result;
  }

  const url = new URL(href);
  const isInternal = url.origin === window.location.origin;

  if (isInternal) {
    const result = {
      isInternal: true,
      path: url.pathname,
    } as const;

    return result;
  }

  return { isInternal: false } as const;
};

export const Link = ({
  onClick,
  className,
  to,
  children,
}: {
  to: string;
  onClick?: (e: MouseEvent<HTMLAnchorElement>) => void;
  className?: string;
  children: ReactNode;
}) => {
  const navigate = useNavigate();

  const handleClick = useCallback(
    (e: MouseEvent<HTMLAnchorElement>) => {
      const result = getInternalPath(e.currentTarget.href);
      if (result.isInternal) {
        e.preventDefault();
        navigate(result.path);
      }
      onClick?.(e);
    },
    [navigate],
  );

  return (
    <a className={className} href={to} onClick={handleClick}>
      {children}
    </a>
  );
};
