// Generated by ReScript, PLEASE EDIT WITH CARE

import { MouseEvent, ReactNode, useCallback } from 'react';
import { useNavigate } from '../utils/router';

const isInternal = (href: string) => {
  if (href.startsWith('/')) {
    return true;
  }

  const url = new URL(href);
  return url.origin === window.location.origin;
};

export const Link = ({
  onClick,
  className,
  to,
  children,
}: {
  to: string;
  onClick?: (e: MouseEvent<HTMLAnchorElement>) => void;
  className?: string;
  children: ReactNode;
}) => {
  const navigate = useNavigate();

  const handleClick = useCallback(
    (e: MouseEvent<HTMLAnchorElement>) => {
      if (isInternal(e.currentTarget.href)) {
        e.preventDefault();
        navigate(e.currentTarget.href);
      }
      onClick?.(e);
    },
    [navigate],
  );

  return (
    <a className={className} href={to} onClick={handleClick}>
      {children}
    </a>
  );
};
