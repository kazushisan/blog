// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Post from "./pages/Post.bs.js";
import * as Latex from "./pages/Latex.bs.js";
import * as React from "react";
import * as Footer from "./components/Footer.bs.js";
import * as Header from "./components/Header.bs.js";
import * as Router from "./hooks/Router.bs.js";
import * as PostList from "./pages/PostList.bs.js";
import * as Belt_List from "rescript/lib/es6/belt_List.js";
import Contentroutes from "content:routes";

function App$Layout(props) {
  var isArticle = props.isArticle;
  return React.createElement("div", {
              className: "flex flex-col min-h-screen"
            }, React.createElement("div", {
                  className: "flex-none"
                }, React.createElement(Header.make, {
                      isArticle: isArticle
                    })), React.createElement("div", {
                  className: "flex-auto"
                }, props.children), React.createElement("div", {
                  className: "flex-none"
                }, React.createElement(Footer.make, {
                      isArticle: isArticle
                    })));
}

var Layout = {
  make: App$Layout
};

function App(props) {
  var url = Router.useUrl(undefined);
  var path = "/" + Belt_List.toArray(url.path).join("/") + "";
  var target = Contentroutes.find(function (item) {
        return item.path === path;
      });
  var match = url.path;
  if (target !== undefined) {
    if (match) {
      switch (match.hd) {
        case "latex" :
            return React.createElement(App$Layout, {
                        children: React.createElement(Latex.make, {
                              path: target.path,
                              load: target.load
                            }),
                        isArticle: true
                      });
        case "post" :
            return React.createElement(App$Layout, {
                        children: React.createElement(Post.make, {
                              path: target.path,
                              load: target.load
                            }),
                        isArticle: true
                      });
        default:
          
      }
    }
    
  } else if (!match) {
    return React.createElement(App$Layout, {
                children: React.createElement(PostList.make, {}),
                isArticle: false
              });
  }
  return React.createElement(App$Layout, {
              children: "page not found",
              isArticle: false
            });
}

var make = App;

export {
  Layout ,
  make ,
}
/* Post Not a pure module */
